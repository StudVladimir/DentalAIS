// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using MySql.Data.MySqlClient;
using System.Data;

namespace DentalSV
{
	public partial class ChoosePatForReceptViewController : NSViewController
	{
		public ChoosePatForReceptViewController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            UpdatePatientTable();
        }

        private PatientTableDataSource DataSource = new PatientTableDataSource();
        public void UpdatePatientTable()
        {
            DB db = new DB();

            DataTable table = new DataTable();

            MySqlDataAdapter adapter = new MySqlDataAdapter();

            MySqlCommand command = new MySqlCommand("select patient_id, concat(Surname,' ', Name,' ', Patronymic), BirthDate, Phone, WorkingPlace, Pensioner, patient_id FROM Patients;", db.GetConnection());

            adapter.SelectCommand = command;

            adapter.Fill(table);

            DataSource = new PatientTableDataSource();

            foreach (DataRow row in table.Rows)
            {
                int counter = 1;
                var id = new int();
                var fio = "";
                string formatdate = "";
                var birthdate = new DateTime();
                var phone = "";
                var workingplace = "";
                var pensioner = "";

                var cells = row.ItemArray;
                foreach (object cell in cells)
                {
                    switch (counter)
                    {
                        case 1:
                            id = (int)cell;
                            break;
                        case 2:
                            fio = cell.ToString();
                            break;
                        case 3:
                            birthdate = (DateTime)cell;
                            formatdate = birthdate.ToString("dd/MM/yyyy");
                            break;
                        case 4:
                            phone = cell.ToString();
                            break;
                        case 5:
                            workingplace = cell.ToString();
                            break;
                        case 6:
                            pensioner = cell.ToString();
                            break;
                    }
                    counter++;
                }
                DataSource.PatientS.Add(new Patient(id, fio, formatdate, phone, workingplace, pensioner));
                // Populate the Product Table
                PatientsTableView.DataSource = DataSource;
                PatientsTableView.Delegate = new PatientTableDelegate(this, DataSource);
            }
        }

        partial void BtnCancel(NSObject sender)
        {
            View.Window.OrderOut(Self);
            var storyboard = NSStoryboard.FromName("Scene6", null);
            var window = storyboard.InstantiateControllerWithIdentifier("Scene6Main") as NSWindowController;
            window.ShowWindow(this);
        }

        partial void BtnChoosePatient(NSObject sender)
        {
            if (PublicValues.ChoosePatForPhoto == false && PublicValues.ChoosePatForProtez==false)
            {
                if (PatientsTableView.SelectedRow >= 0)
                {
                    ValuesForCreateReception.ChoosenPatientEntire = DataSource.PatientS[(int)PatientsTableView.SelectedRow];
                    View.Window.OrderOut(Self);
                    var storyboard = NSStoryboard.FromName("Scene6", null);
                    var window = storyboard.InstantiateControllerWithIdentifier("Scene6Main") as NSWindowController;
                    window.ShowWindow(this);
                }
                else
                {
                    var alert = new NSAlert()
                    {
                        AlertStyle = NSAlertStyle.Informational,
                        InformativeText = $"Для этой операции, выберите пациента в таблице и нажмите снова на кнопку.",
                        MessageText = $"Выбирете пациента",
                    };
                    alert.AddButton("Ок");
                    alert.BeginSheetForResponse(this.View.Window, (result) =>
                    {
                        // Should we delete the requested row?
                        if (result == 1001)
                        {
                        }
                    });
                }
            }
            if (PublicValues.ChoosePatForProtez == true)
            {
                PublicValues.ChoosePatForProtez = false;
                if (PatientsTableView.SelectedRow >= 0)
                {
                    ValuesForCreateReception.ChoosenPatientEntire = DataSource.PatientS[(int)PatientsTableView.SelectedRow];
                    View.Window.OrderOut(Self);
                    var storyboard = NSStoryboard.FromName("Scene10", null);
                    var window = storyboard.InstantiateControllerWithIdentifier("Scene10Main") as NSWindowController;
                    window.ShowWindow(this);
                }
                else
                {
                    var alert = new NSAlert()
                    {
                        AlertStyle = NSAlertStyle.Informational,
                        InformativeText = $"Для этой операции, выберите пациента в таблице и нажмите снова на кнопку.",
                        MessageText = $"Выбирете пациента",
                    };
                    alert.AddButton("Ок");
                    alert.BeginSheetForResponse(this.View.Window, (result) =>
                    {
                        // Should we delete the requested row?
                        if (result == 1001)
                        {
                        }
                    });
                }
            }
            if (PublicValues.ChoosePatForPhoto == true)
            {
                PublicValues.ChoosePatForPhoto = false;
                if (PatientsTableView.SelectedRow >= 0)
                {
                    ValuesForCreateReception.ChoosenPatientEntire = DataSource.PatientS[(int)PatientsTableView.SelectedRow];
                    View.Window.OrderOut(Self);
                    var storyboard = NSStoryboard.FromName("Scene8", null);
                    var window = storyboard.InstantiateInitialController() as NSWindowController;
                    window.ShowWindow(this);
                }
                else
                {
                    var alert = new NSAlert()
                    {
                        AlertStyle = NSAlertStyle.Informational,
                        InformativeText = $"Для этой операции, выберите пациента в таблице и нажмите снова на кнопку.",
                        MessageText = $"Выбирете пациента",
                    };
                    alert.AddButton("Ок");
                    alert.BeginSheetForResponse(this.View.Window, (result) =>
                    {
                        // Should we delete the requested row?
                        if (result == 1001)
                        {
                        }
                    });
                }
            }
        }
    }
}
