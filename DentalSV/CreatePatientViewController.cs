// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using MySql.Data.MySqlClient;
using System.Data;
using System.Linq;
using System.Resources;

namespace DentalSV
{
	public partial class CreatePatientViewController : NSViewController
	{

		public CreatePatientViewController (IntPtr handle) : base (handle)
		{
            NSNotificationCenter.DefaultCenter.AddObserver(new NSString("updateViewNotification"), UpdateView);
        }

        private void UpdateView(NSNotification notification)
        {
            ImgViewField.Image = new NSImage("/Users/administrator/Projects/AISStom/DentalSV/Resources/DentFormula.png");
        }

        partial void SaveBtn(NSObject sender)
        {
            DB db = new DB();

            db.OpenConnection();

            MySqlCommand command = new MySqlCommand("INSERT INTO Patients (`Name`, `Surname`, `Patronymic`, `BirthDate`, `Phone`, `WorkingPlace`, `Pensioner`) VALUES (@name, @surname, @patronymic, @birthdate, @phone, @workingplace, @pensioner);", db.GetConnection());
            command.Parameters.Add("@name", MySqlDbType.VarChar).Value = NameTxtField.StringValue;
            command.Parameters.Add("@surname", MySqlDbType.VarChar).Value = SurnameTxtField.StringValue;
            command.Parameters.Add("@patronymic", MySqlDbType.VarChar).Value = PatronymicTxtField.StringValue;
            string pickDate = BirthDateDatePicker.DateValue.ToString();
            pickDate = pickDate.Remove(19);
            command.Parameters.Add("@birthdate", MySqlDbType.Date).Value = pickDate;
            command.Parameters.Add("@phone", MySqlDbType.VarChar).Value = PhoneTxtField.StringValue;
            command.Parameters.Add("@workingplace", MySqlDbType.VarChar).Value = WorkingPlaceTxtField.StringValue;
            int pensionerValue = 0;
            if (PensionerComboBox.StringValue == "Да")
            {
                pensionerValue = 1;
            }
            command.Parameters.Add("@pensioner", MySqlDbType.Int32).Value = pensionerValue;
            command.ExecuteNonQuery();

            DataTable table = new DataTable();

            MySqlDataAdapter adapter = new MySqlDataAdapter();

            command = new MySqlCommand("SELECT Patient_id from Patients where Name=@name and Surname=@surname and Patronymic=@patronymic and BirthDate=@birthdate and Phone=@phone and WorkingPlace=@workingplace and Pensioner=@pensioner;", db.GetConnection());
            command.Parameters.Add("@name", MySqlDbType.VarChar).Value = NameTxtField.StringValue;
            command.Parameters.Add("@surname", MySqlDbType.VarChar).Value = SurnameTxtField.StringValue;
            command.Parameters.Add("@patronymic", MySqlDbType.VarChar).Value = PatronymicTxtField.StringValue;
            command.Parameters.Add("@birthdate", MySqlDbType.Date).Value = pickDate;
            command.Parameters.Add("@phone", MySqlDbType.VarChar).Value = PhoneTxtField.StringValue;
            command.Parameters.Add("@workingplace", MySqlDbType.VarChar).Value = WorkingPlaceTxtField.StringValue;
            command.Parameters.Add("@pensioner", MySqlDbType.Int32).Value = pensionerValue;

            adapter.SelectCommand = command;
            adapter.Fill(table);

            string[] CreatedPatient = table.Rows.Cast<DataRow>().Select(r => Convert.ToString(r["Patient_id"])).ToArray();

            command = new MySqlCommand("INSERT INTO MedicalCard (`Patient_id`, `ChronicDiseases`, `InfectiousDiseases`, `Allergies`, `Injurys`, `MucosalCondition`, `VisualInspection`, `DentalFormula`, `ProstheticPlan`, `CreationDateTime`) VALUES (@patientid, @chronicdiseases, @infectiousdiseases, @allergies, @injurys, @mucosalcondition, @visualinspection, @dentalformula, @prostheticplan, @creationdatetime);", db.GetConnection());
            command.Parameters.Add("@patientid", MySqlDbType.VarChar).Value = CreatedPatient[0];
            command.Parameters.Add("@chronicdiseases", MySqlDbType.VarChar).Value = ChronicDiseasesTxtField.StringValue;
            command.Parameters.Add("@infectiousdiseases", MySqlDbType.VarChar).Value = InfectiousDiseasesTxtField.StringValue;
            command.Parameters.Add("@allergies", MySqlDbType.VarChar).Value = AllergiesTxtField.StringValue;
            command.Parameters.Add("@injurys", MySqlDbType.VarChar).Value = InjurysTxtField.StringValue;
            command.Parameters.Add("@mucosalcondition", MySqlDbType.VarChar).Value = MucosalConditionTxtField.StringValue;
            command.Parameters.Add("@visualinspection", MySqlDbType.VarChar).Value = VisualInspectionTxtField.StringValue;
            command.Parameters.Add("@dentalformula", MySqlDbType.VarChar).Value = PublicValues.DentalFormulaValue;
            command.Parameters.Add("@prostheticplan", MySqlDbType.VarChar).Value = ProstheticPlanTxtField.StringValue;
            command.Parameters.Add("@creationdatetime", MySqlDbType.DateTime).Value = DateTime.Now;
            command.ExecuteNonQuery();

            db.CloseConnection();

            View.Window.OrderOut(Self);
            var storyboard = NSStoryboard.FromName("Scene3", null);
            var window = storyboard.InstantiateControllerWithIdentifier("Scene3Main") as NSWindowController;
            window.ShowWindow(this);
        }

        partial void DentalFormulaBtn(NSObject sender)
        {
            var storyboard = NSStoryboard.FromName("Scene4", null);
            var window = storyboard.InstantiateControllerWithIdentifier("DentalFormula") as NSWindowController;
            window.ShowWindow(this);
        }
    }
}