// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using MySql.Data.MySqlClient;
using JavaScriptCore;
using MySqlX.XDevAPI.Relational;
using System.Data;

namespace DentalSV
{
    public partial class DentalFormulaViewcontroller : NSViewController
    {
        public DentalFormulaViewcontroller(IntPtr handle) : base(handle)
        {
        }

        public override void ViewDidLoad()
        {
            if (PublicValues.DFormulaOldCardOpened == true)
            {
                BtnSaveOutlet.Enabled = false;
                BtnCancelOutlet.StringValue = "Назад";
                SetDentalFormulaValuesFromOldCard();
            }
            else
            {
                BtnSaveOutlet.Enabled = true;
                SetDentalFromulaValues();
                PublicValues.DentalFormulaNeedChanged = false;
            }
        }

        private string DentalFormulaValue()
        {
            string[] TeethTxtFields = { TxtFLeftBot1.StringValue,TxtFLeftBot2.StringValue,TxtFLeftBot3.StringValue,TxtFLeftBot4.StringValue,
                TxtFLeftBot5.StringValue,TxtFLeftBot6.StringValue,TxtFLeftBot7.StringValue,TxtFLeftBot8.StringValue,
                TxtFLeftTop1.StringValue,TxtFLeftTop2.StringValue,TxtFLeftTop3.StringValue,TxtFLeftTop4.StringValue,
                TxtFLeftTop5.StringValue,TxtFLeftTop6.StringValue,TxtFLeftTop7.StringValue,TxtFLeftTop8.StringValue,
                TxtFRightBot1.StringValue,TxtFRightBot2.StringValue,TxtFRightBot3.StringValue,TxtFRightBot4.StringValue,
                TxtFRightBot5.StringValue,TxtFRightBot6.StringValue,TxtFRightBot7.StringValue,TxtFRightBot8.StringValue,
                TxtFRightTop1.StringValue,TxtFRightTop2.StringValue,TxtFRightTop3.StringValue,TxtFRightTop4.StringValue,
                TxtFRightTop5.StringValue,TxtFRightTop6.StringValue,TxtFRightTop7.StringValue,TxtFRightTop8.StringValue
            };
            string value = "";
            for (int i = 0; i < TeethTxtFields.Length; i++)
            {
                value += TeethTxtFields[i] + '|';
            }
            return value;
        }

        partial void BtnSave(NSObject sender)
        {
            PublicValues.DentalFormulaNeedChanged = true;
            PublicValues.DentalFormulaValue = DentalFormulaValue();
            View.Window.OrderOut(Self);
            NSNotificationCenter.DefaultCenter.PostNotificationName(new NSString("updateViewNotification"), null);
        }

        partial void BtnCancel(NSObject sender)
        {
            PublicValues.DFormulaOldCardOpened = false;
            View.Window.OrderOut(Self);
        }

        public void SetDentalFormulaValuesFromOldCard()
        {
            DB db = new DB();

            DataTable table = new DataTable();

            MySqlDataAdapter adapter = new MySqlDataAdapter();

            MySqlCommand command = new MySqlCommand("Select DentalFormula From MedicalCard Where MedCard_id=@id;", db.GetConnection());
            command.Parameters.Add("@id", MySqlDbType.Int32).Value = PublicValues.ChoosenEarlyMedCard_id;
            adapter.SelectCommand = command;
            table = new DataTable();
            adapter.Fill(table);
            if (table.Rows.Count == 0)
            {

            }
            else
            {
                string dentalformula = table.Rows[0].ItemArray[0].ToString();

                NSTextField[] TeethTxtFields = {TxtFLeftBot1,TxtFLeftBot2,TxtFLeftBot3,TxtFLeftBot4,
                TxtFLeftBot5,TxtFLeftBot6,TxtFLeftBot7,TxtFLeftBot8,
                TxtFLeftTop1,TxtFLeftTop2,TxtFLeftTop3,TxtFLeftTop4,
                TxtFLeftTop5,TxtFLeftTop6,TxtFLeftTop7,TxtFLeftTop8,
                TxtFRightBot1,TxtFRightBot2,TxtFRightBot3,TxtFRightBot4,
                TxtFRightBot5,TxtFRightBot6,TxtFRightBot7,TxtFRightBot8,
                TxtFRightTop1,TxtFRightTop2,TxtFRightTop3,TxtFRightTop4,
                TxtFRightTop5,TxtFRightTop6,TxtFRightTop7,TxtFRightTop8
                };

                int counter = 0;
                for (int i = 0; i < dentalformula.Length; i++)
                {
                    if (dentalformula[i].ToString() == "|")
                    {
                        counter++;
                    }
                    else
                    {
                        TeethTxtFields[counter].StringValue += dentalformula[i].ToString();
                    }
                }
            }
        }

        public void SetDentalFromulaValues()
        {
            DB db = new DB();

            DataTable table = new DataTable();

            MySqlDataAdapter adapter = new MySqlDataAdapter();

            MySqlCommand command = new MySqlCommand("select DentalFormula from MedicalCard Where Patient_id = @id order by CreationDateTime desc limit 1;", db.GetConnection());
            command.Parameters.Add("@id", MySqlDbType.Int32).Value = PublicValues.ChoosenPatientID;
            adapter.SelectCommand = command;
            table = new DataTable();
            adapter.Fill(table);
            if (table.Rows.Count == 0)
            {

            }
            else
            {
                string dentalformula = table.Rows[0].ItemArray[0].ToString();

                NSTextField[] TeethTxtFields = {TxtFLeftBot1,TxtFLeftBot2,TxtFLeftBot3,TxtFLeftBot4,
                TxtFLeftBot5,TxtFLeftBot6,TxtFLeftBot7,TxtFLeftBot8,
                TxtFLeftTop1,TxtFLeftTop2,TxtFLeftTop3,TxtFLeftTop4,
                TxtFLeftTop5,TxtFLeftTop6,TxtFLeftTop7,TxtFLeftTop8,
                TxtFRightBot1,TxtFRightBot2,TxtFRightBot3,TxtFRightBot4,
                TxtFRightBot5,TxtFRightBot6,TxtFRightBot7,TxtFRightBot8,
                TxtFRightTop1,TxtFRightTop2,TxtFRightTop3,TxtFRightTop4,
                TxtFRightTop5,TxtFRightTop6,TxtFRightTop7,TxtFRightTop8
                };

                int counter = 0;
                for (int i = 0; i < dentalformula.Length; i++)
                {
                    if (dentalformula[i].ToString() == "|")
                    {
                        counter++;
                    }
                    else
                    {
                        TeethTxtFields[counter].StringValue += dentalformula[i].ToString();
                    }
                }
            }
        }
    }
}

