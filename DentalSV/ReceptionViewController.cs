// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using MySql.Data.MySqlClient;
using System.Data;
using System.Reflection;
using static CoreFoundation.DispatchSource;

namespace DentalSV
{
	public partial class ReceptionViewController : NSViewController
	{
		public ReceptionViewController (IntPtr handle) : base (handle)
		{
		}

        private ReceptionTableDataSource DataSource = new ReceptionTableDataSource();
        private void UpdateReceptionTable()
        {
            DataSource = new ReceptionTableDataSource();

            DB db = new DB();

            DataTable table = new DataTable();

            MySqlDataAdapter adapter = new MySqlDataAdapter();

            MySqlCommand command = new MySqlCommand("SELECT Reception_id, DateTime, Cabinet_id, concat(Surname,' ', Name,' ',Patronymic), Discription FROM Reception Inner Join Patients On Patients.Patient_id = Reception.Patient_id WHERE DateTime LIKE @datepicker order by DateTime;", db.GetConnection());

            string pickDate = DatePicker.DateValue.ToString();
            pickDate = pickDate.Remove(10)+"%";
            command.Parameters.Add("@datepicker", MySqlDbType.String).Value = pickDate;

            adapter.SelectCommand = command;

            adapter.Fill(table);

            foreach (DataRow row in table.Rows)
            {
                int counter = 1;
                string formatdate = "";
                int reception_id = new int();
                var datetime = new DateTime();
                var cabinet_id = new int();
                var patient_id = "";
                var discription = "";

                var cells = row.ItemArray;
                foreach (object cell in cells)
                {
                    switch (counter)
                    {
                        case 1:
                            reception_id = (int)cell;
                            break;
                        case 2:
                            datetime = (DateTime)cell;
                            formatdate = datetime.ToString("dd/MM/yyyy HH:mm");
                            break;
                        case 3:
                            cabinet_id = (int)cell;
                            break;
                        case 4:
                            patient_id = cell.ToString();
                            break;
                        case 5:
                            discription = cell.ToString();
                            break;
                    }
                    counter++;
                }
                DataSource.ReceptionS.Add(new Reception(reception_id,formatdate, cabinet_id, patient_id, discription));
                ReceptionTable.DataSource = DataSource;
                ReceptionTable.Delegate = new ReceptionTableDelegate(DataSource);
            }
            if (table.Rows.Count <= 3)
                Workload.IntValue = 1;

            if (table.Rows.Count > 3)
                Workload.IntValue = 2;

            if (table.Rows.Count > 6)
                Workload.IntValue = 3;

            if (table.Rows.Count > 10)
                Workload.IntValue = 4;

            //Чистит таблицу при отсутсвии записей
            if (table.Rows.Count == 0)
            {
                Workload.IntValue = 0;
                DataSource.ReceptionS.Clear();
                ReceptionTable.DataSource = DataSource;
                ReceptionTable.Delegate = new ReceptionTableDelegate(DataSource);
            }
        }

        public override void ViewDidLoad()
        {
            DatePicker.DateValue = (NSDate)DateTime.Now;
            UpdateReceptionTable();
        }

        partial void BtnCheck(NSObject sender)
        {
            string str = DatePicker.DateValue.ToString();
        }

        partial void DatePickerAction(NSObject sender)
        {
            UpdateReceptionTable();
        }

        partial void CreateNewReception(NSObject sender)
        {
            View.Window.OrderOut(Self);
            var storyboard = NSStoryboard.FromName("Scene6", null);
            var window = storyboard.InstantiateControllerWithIdentifier("Scene6Main") as NSWindowController;
            window.ShowWindow(this);
        }

        partial void BtnDeleteReception(NSObject sender)
        {
            if (ReceptionTable.SelectedRow >= 0)
            {
                Console.WriteLine(DataSource.ReceptionS[(int)ReceptionTable.SelectedRow]);
                var reception = DataSource.ReceptionS[(int)ReceptionTable.SelectedRow];

                // Configure alert
                var alert = new NSAlert()
                {
                    AlertStyle = NSAlertStyle.Informational,
                    InformativeText = $"Вы уверены, что хотите удалить запись на {reception.DateTime}? Эта операция не может быть отменена.",
                    MessageText = $"Удалить заипсь на приём {reception.DateTime}?",
                };
                alert.AddButton("Отмена");
                alert.AddButton("Удалить");
                alert.BeginSheetForResponse(this.View.Window, (result) => {
                    // Should we delete the requested row?
                    if (result == 1001)
                    {
                        DB db = new DB();

                        DataTable table = new DataTable();

                        MySqlDataAdapter adapter = new MySqlDataAdapter();

                        MySqlCommand command = new MySqlCommand("DELETE FROM Reception Where Reception_id = @id;", db.GetConnection());
                        command.Parameters.Add("@id", MySqlDbType.Int32).Value = reception.Reception_id;
                        db.OpenConnection();
                        command.ExecuteNonQuery();
                        db.CloseConnection();
                        UpdateReceptionTable();
                    }
                });
            }
            else
            {
                var alert = new NSAlert()
                {
                    AlertStyle = NSAlertStyle.Informational,
                    InformativeText = $"Для этой операции, выберите запись на приём, которую хотите удалить, в таблице и нажмите снова на кнопку.",
                    MessageText = $"Выбирете запись на приём",
                };
                alert.AddButton("Ок");
                alert.BeginSheetForResponse(this.View.Window, (result) => {
                    // Should we delete the requested row?
                    if (result == 1001)
                    {
                    }
                });
            }
        }
    }
}